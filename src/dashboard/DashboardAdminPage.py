
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from asyncio.windows_events import NULL
from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
import tkinter as tk
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("../../img/dashboard page")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

class DashboardAdminPage(tk.Frame):
    def __init__(self, master, pageManager):
        super().__init__(master)
        self.master = master
        self.origin = pageManager
        self.pack()
        self.DashboardAdminPage()
    
    def DashboardAdminPage(self):
        
        self.canvas = Canvas(
            self.master,
            bg = "#FFFFFF",
            height = 700,
            width = 1080,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        self.canvas.place(x = 0, y = 0)
        self.canvas.create_text(
            36.0,
            24.0,
            anchor="nw",
            text="PilahLimbah.id",
            fill="#000000",
            font=("Helvetica", 20 * -1, "bold")
        )

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        self.button_1 = Button(
            image= self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_1 clicked"),
            relief="flat",
            bg="white"
        )
        self.button_1.place(
            x=990.0,
            y=18.0,
            width=42.0,
            height=41.0
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_5.png"))
        self.button_2 = Button(
            image= self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat",
            bg="white"
        )
        self.button_2.place(
            x=879.0,
            y=28.0,
            width=47.0,
            height=22.0
        )

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        self.image_1 = self.canvas.create_image(
            203.0,
            376.0,
            image= self.image_image_1
        )

        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        self.image_2 = self.canvas.create_image(
            724.0,
            376.0,
            image= self.image_image_2
        )

        self.image_image_3 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        self.image_3 = self.canvas.create_image(
            584.0,
            268.0,
            image= self.image_image_3
        )

        self.canvas.create_text(
            56.0,
            128.0,
            anchor="nw",
            text="PilahLimbah.id!",
            fill="#FFFFFF",
            font=("Helvetica", 32 * -1, "bold")
        )

        self.canvas.create_text(
            56.0,
            94.0,
            anchor="nw",
            text="Welcome to",
            fill="#FFFFFF",
            font=("Helvetica", 32 * -1)
        )

        self.canvas.create_text(
            639.0,
            120.0,
            anchor="nw",
            text="Statistics",
            fill="#000000",
            font=("Helvetica", 32 * -1, "bold")
        )

        self.canvas.create_text(
            466.0,
            228.0,
            anchor="nw",
            text="Members",
            fill="#000000",
            font=("Helvetica", 24 * -1)
        )

        member_count = self.origin.mydb.cursor()
        member_count.execute("select count(member_id) from member")
        memcnt = 0 
        for c in member_count:
            memcnt = c
        self.canvas.create_text(
            466.0,
            269.0,
            anchor="nw",
            text=memcnt,
            fill="#000000",
            font=("Helvetica", 32 * -1, "bold")
        )

        self.image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        self.image_4 = self.canvas.create_image(
            880.0,
            268.0,
            image= self.image_image_4
        )

        self.canvas.create_text(
            762.0,
            228.0,
            anchor="nw",
            text="Guest",
            fill="#000000",
            font=("Helvetica", 24 * -1)
        )

        guest_count = self.origin.mydb.cursor()
        guest_count.execute("select count(guest_id) from guest")
        gstcnt = 0 
        for c in guest_count:
            gstcnt = c
        self.canvas.create_text(
            762.0,
            269.0,
            anchor="nw",
            text=gstcnt,
            fill="#000000",
            font=("Helvetica", 32 * -1, "bold")
        )

        self.image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        self.image_5 = self.canvas.create_image(
            727.0,
            413.0,
            image= self.image_image_5
        )

        self.canvas.create_text(
            455.0,
            373.0,
            anchor="nw",
            text="Our Profit",
            fill="#000000",
            font=("Helvetica", 24 * -1)
        )

        amount = self.origin.mydb.cursor()
        amount.execute("select sum(amount) from transactions")
        sum_amount = 0
        for s in amount:
            if(s[0] == None): sum_amount = 0
            else: sum_amount = float(s[0])
        self.canvas.create_text(
            455.0,
            414.0,
            anchor="nw",
            text="IDR{:.2f}".format(sum_amount),
            fill="#000000",
            font=("Helvetica", 32 * -1, "bold")
        )

        self.image_image_6 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        self.image_6 = self.canvas.create_image(
            204.0,
            460.0,
            image= self.image_image_6
        )

    def startPage(self):
        self.mainloop()
